---
title: "Data Gathering"
pdf-engine: lualatex
format:
  html:
        code-fold: true
        self-contained: true
execute:
    warning: false
---

**Data cleaning** is the process of fixing or removing incorrect, corrupted, incorrectly formatted, duplicate, or incomplete data within a dataset. When combining multiple data sources, there are many opportunities for data to be duplicated or mislabeled. If data is incorrect, outcomes and algorithms are unreliable, even though they may look correct. There is no one absolute way to prescribe the exact steps in the data cleaning process because the processes will vary from dataset to dataset. But it is crucial to establish a template for your data cleaning process so you know you are doing it the right way every time. In this section, I will clean my text data and modified data. The steps for cleaning these two kind of data is different, so I will specify the cleaning steps with presenting the code. 

## R on downloaded dataset

Load the possible packages
```{r}
library(tidyverse)
library(dplyr)
library(reshape2)
library(tidyr)
library(stringr)
```

### Dataset 1
#### Energy Consumption by sector dataset

This dataset contains the info of value of monthly energy consumption by different sectors. I will use this official data set from U.S. EIA to see how exact the monthly usage of different energy in different sectors. Since the dataset is too dirty and I cannot tell what kind of variables it has now, let's do the cleaning and tidying step by step. Finally, I will introduce the variables I have in the dataset.

 - Step 1: load the dataset
```{r}
sector <- read.csv("/Users/apple/Desktop/anly-501-project-HuitingSong-1/501-project-website/data/downloaded data/consumptionbysector.csv")
head(sector,5)
```

 - Step 2: check the NA missing value. If have, remove it. 

 Through checking, No NA missing value in the dataset
```{r}
sum(is.na(sector))
```

 - Step 3: Remove the irrelevent columns
```{r}
sector.clean <- sector[ , ! names(sector) %in% c("MSN","Column_Order","Unit")]
head(sector.clean)
```
 
 - Step 4: drop the value in column

 Since the column "Description" in this dataset contain the info of energy type and sector type AND there are more than 10000 dataset, I want to remove the irrelevent row with some value in this column.

 I check the levels of the column and there are totally 15 levels. Among the levels, there are lots of contains that I do not need. 
```{r}
unique(sector$Description)
```

 Remove the value i do not need in "Description". and check the unique levels left
```{r}
sector.clean <- sector.clean %>%
         filter( Description != "Electricity Sales to Ultimate Customers by the Residential Sector")%>%
         filter( Description != "Electricity Sales to Ultimate Customers by the Commercial Sector")%>%
         filter( Description != "Electricity Sales to Ultimate Customers in the Industrial Sector")

unique(sector.clean$Description)
```

 - Step 5: split the column "Description" into two columns "sector" and "energy type"
```{r}
sector.clean[c('energy_type', 'sector')] <- str_split_fixed(sector.clean$Description, 'by', 2)
```

 - Step 6: change the variable levels name and drop the column "Description"
```{r}
sector.clean <- sector.clean[ , ! names(sector.clean) %in% c("Description")]
sum(is.na(sector.clean))

sector.clean$energy_type[sector.clean$energy_type=="Primary Energy Consumed "]<-"Primary Energy"
sector.clean$energy_type[sector.clean$energy_type=="End-Use Energy Consumed "]<-"End-Use Energy"
sector.clean$energy_type[sector.clean$energy_type=="Electrical System Energy Losses "]<-"Electrical Energy"
sector.clean$energy_type[sector.clean$energy_type=="Total Energy Consumed "]<-"Total"
sector.clean$sector[sector.clean$sector==" the Residential Sector"]<-"Residential"
sector.clean$sector[sector.clean$sector==" the Commercial Sector"]<-"Commercial"
sector.clean$sector[sector.clean$sector==" the Industrial Sector"]<-"Industrial"
sector.clean$sector[sector.clean$sector==" Residential Sector"]<-"Residential"
sector.clean$sector[sector.clean$sector==" Commercial Sector"]<-"Commercial"
sector.clean$sector[sector.clean$sector==" Industrial Sector"]<-"Industrial"

head(sector.clean)
```

 - Step 7: save to csv file
```{r}
write.csv(sector.clean,"/Users/apple/Desktop/anly-501-project-HuitingSong-1/501-project-website/data/cleaned data/clean_sector.csv")
```

### Downloaded Dataset 2
#### Energy CO^2 Emission dataset

This dataset contains the info of value of annually total energy consumption and Total Energy CO2 Emissions. I will use this official data set from U.S. EIA to see how exact the annually usage of energy and the CO2 emission anually. ALso, i can analyze the relationship between energy consumption and energy CO2 emossion. Since the dataset is too dirty and I cannot tell what kind of variables it has now, let's do the cleaning and tidying step by step. Finally, I will introduce the variables I have in the dataset.

 - Step 1: load the dataset
```{r}
emission <- read.csv("/Users/apple/Desktop/anly-501-project-HuitingSong-1/501-project-website/data/downloaded data/energycoemission.csv")
head(emission,5)
```

 - Step 2: check the NA missing value. If have, remove it. 

 Through checking, No NA missing value in the dataset
```{r}
sum(is.na(emission))
```

 - Step 3: Remove the irrelevent columns
```{r}
emission.clean <- emission[ , ! names(emission) %in% c("MSN","Column_Order","Unit")]
head(emission.clean)
```
 
 - Step 4: drop the value in column

 Since the column "Description" in this dataset contain the info of total energy consumption, energy expenditures and total energy CO2 emission in different calculation mathod AND there are more than 10000 dataset, I want to remove the irrelevent row with some value in this column. 

 I check the levels of the column and there are totally 10 levels. Among the levels, there are lots of contains that I do not need. such as "Total Primary Energy Consumption per Real Dollar of GDP","Energy Expenditures as Share of GDP","Energy Expenditures as Share of Gross Output","Total Energy CO2 Emissions per Real Dollar of GDP". These are the value that i will not consider in my project, so i will remove them.
```{r}
unique(emission$Description)
```

 Remove the value i do not need in "Description"
```{r}
emission.clean <- emission.clean %>%
         filter( Description != "Total Primary Energy Consumption per Real Dollar of GDP")%>%
         filter( Description != "Energy Expenditures as Share of GDP")%>%
         filter( Description != "Energy Expenditures as Share of Gross Output")%>%
         filter( Description != "Total Energy CO2 Emissions per Real Dollar of GDP")
head(emission.clean)
```

 - Step 5: check and change the varible data type
```{r}
str(emission.clean)
```

 Change the `value` to integer
```{r}
emission.clean$Value <- as.integer(emission.clean$Value)
``` 

 Change the int `YYYYMM` as chr

```{r}
emission.clean$YYYYMM <- as.character(emission.clean$YYYYMM)
emission.clean$Description <- as.factor(emission.clean$Description)
```

 - Step 6: Tidying the data

 pivot wider the `Description` and change the column name for better extract

```{r}
emission.clean <- emission.clean %>%
                    pivot_wider(names_from = Description, values_from = Value)
colnames(emission.clean) <- c('Date','v1','v2','v3','v4','v5','v6')
head(emission.clean,5)
```

 - Step 7: Check NA and change the NA

 After pivoting, we found 44 NA value in the dataset. We will not remove the NA value, since the data is colloected by Date. If I remove the entire row of containning NA value, The Date will not be continious. Thus, I choose to fill the NA value by the mean of columns. After filling the value, there is no missing value in the dataset. 
```{r}
sum(is.na(emission.clean))
# change the NA by mean of the column
emission.clean$v1[is.na(emission.clean$v1)]<-mean(emission.clean$v1,na.rm=TRUE)
emission.clean$v2[is.na(emission.clean$v2)]<-mean(emission.clean$v2,na.rm=TRUE)
emission.clean$v3[is.na(emission.clean$v3)]<-mean(emission.clean$v3,na.rm=TRUE)
emission.clean$v4[is.na(emission.clean$v4)]<-mean(emission.clean$v4,na.rm=TRUE)
emission.clean$v5[is.na(emission.clean$v5)]<-mean(emission.clean$v5,na.rm=TRUE)
emission.clean$v6[is.na(emission.clean$v6)]<-mean(emission.clean$v6,na.rm=TRUE)
# check NA again
sum(is.na(emission.clean))
head(emission.clean,10)
```

 - Step 7: save to csv file
```{r}
 write.csv(emission.clean,"/Users/apple/Desktop/anly-501-project-HuitingSong-1/501-project-website/data/cleaned data/clean_emission.csv")
```

 The Variable Description for cleaned Energy CO2 Emission Dataset `clean_emission.csv` <br>
 - Date: The year time from 1949 to 2021 <br>
 - v1: Total Primary Energy Consumption in Quadrillion Btu <br>
 - v2: Total Primary Energy Consumption per Capita in Million Btu <br>
 - v3: Energy Expenditures in Million Nominal Dollars <br>
 - v4: Energy Expenditures per Capita in Nominal Dollars <br>
 - v5: Total Energy CO2 Emissions in Million Metric Tons Carbon Dioxide <br>
 - v6: Total Energy CO2 Emissions per Capita in Metric Tons Carbon Dioxide <br>

